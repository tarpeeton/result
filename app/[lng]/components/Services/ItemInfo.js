'use client'
import { useParams } from 'next/navigation'
import { useEffect, useState } from 'react'

const itemData = {
	'web-development': {
		title: 'Этапы разработки сайтов',
		number: ['01', '02', '03', '04', '05', '06', '07', '08', '09', '10', '11'],
		subtitle: [
			'Сбор информации',
			'Аналитика',
			'Определение функционала',
			'Планирование',
			'UX / UI дизайн',
			'Утверждение концепции',
			'Программирование',
			'Заполнение контентом',
			'Тестирование',
			'Развертывание на сервере',
			'Передача заказчику',
		],
	},
	'telegram-bot-development': {
		title: 'Этапы разработки Telegram-ботов',
		number: ['01', '02', '03', '04', '05', '06', '07', '08', '09', '10'],
		subtitle: [
			'Сбор информации',
			'Аналитика',
			'Определение сценариев взаимодействия',
			'Планирование',
			'Утверждение концепции',
			'Программирование',
			'Наполнение контентом',
			'Тестирование',
			'Развертывание на сервере',
			'Передача заказчику',
		],
	},
	smm: {
		title: 'Этапы работы по SMM',
		number: ['01', '02', '03', '04', '05', '06', '07', '08', '09', '10', '11', '12'],
		subtitle: [
			'Сбор информации',
			'Изучение бренда и аудитории',
			'Анализ конкурентов и рынка',
			'Разработка SMM-стратегии',
			'Составление контент-плана',
			'Создание уникального визуала',
			'Утверждение',
			'Заполнение соц. сетей',
			'Запуск рекламы',
			'Ведение страниц и размещение контента',
			'Анализ результатов и корректировки',
			'Отчетность по итогам кампаний',
		],
	},
	'ads-launch': {
		title: 'Этапы запуска рекламы',
		number: ['01', '02', '03', '04', '05', '06', '07', '08', '09', '10', '11', '12'],
		subtitle: [
			'Сбор информации',
			'Изучение вашего бизнеса и целевой аудитории',
			'Анализ конкурентов и ключевых запросов',
			'Получение доступов или открытие рекламных кабинетов',
			'Разработка стратегии рекламной кампании',
			'Подбор ключевых слов и настроек таргетинга',
			'Создание рекламных объявлений',
			'Запуск кампаний на выбранных площадках',
			'Мониторинг и оптимизация в реальном времени',
			'Предоставление отчетов с результатами',
			'Корректировка стратегии на основе аналитики',
			'Оценка эффективности и поддержка',
		],
	},
	seo: {
		title: 'Этапы SEO-оптимизации',
		number: ['01', '02', '03', '04', '05', '06', '07', '08', '09', '10', '11'],
		subtitle: [
			'Сбор информации',
			'Анализ текущего состояния сайта',
			'Исследование ключевых слов и конкурентов',
			'Разработка стратегии SEO',
			'Оптимизация внутренней структуры сайта',
			'Улучшение контента и мета-тегов',
			'Построение качественных ссылок',
			'Настройка и мониторинг аналитики',
			'Регулярное обновление и оптимизация',
			'Отчетность по результатам',
			'Корректировка стратегии и поддержка',
		],
	},
	branding: {
		title: 'Этапы брендинга',
		number: ['01', '02', '03', '04', '05', '06', '07', '08'],
		subtitle: [
			'Сбор информации',
			'Анализ рынка и целевой аудитории',
			'Исследование конкурентов',
			'Определение уникальных предложений и ценностей',
			'Разработка стратегии брендинга',
			'Создание логотипа и визуальных элементов',
			'Формирование бренд-стиля и гайдлайнов',
			'Оценка эффективности и корректировка',
		],
	},
}
const ItemInfo = () => {
	const { slug } = useParams() // Get the current slug from the URL
	const [content, setContent] = useState({ title: '', subtitle: '' , number: [] })

	useEffect(() => {
		if (slug && itemData[slug]) {
			// Set the content based on the slug
			setContent(itemData[slug])
		} else {
			// Default content if the slug is invalid or missing
			setContent({ title: 'Услуга', subtitle: 'Описание услуги будет здесь.' , number: 0 })
		}
	}, [slug])

	return (
		<div className='mt-[20px] mdl:mt-[20px] 3xl:mt-[25px] rounded-[30px] mdl:rounded-[40px] flex flex-col 3xl:flex-row py-[30px] px-[24px] mdl:py-[50px] mdl:px-[40px] 3xl:py-[80px] 3xl:px-[70px] bg-white mx-[16px] mdl:mx-[20px] 3xl:mx-[30px]'>
			<div className='2xl:w-[50%]'>
				<h2 className='text-[28px] 2xl:w-[80%] 4xl:w-[60%] mdl:text-[40px] 3xl:text-[50px] font-bold'>
					{content.title}
				</h2>
			</div>
      <div className='mt-[20px] mdl:mt-[30px] 3xl:mt-0 2xl:order-1 2xl:w-[50%]'>
				{content.number.map((num, index) => (
					<div key={index} className='flex items-start py-[15px] mdl:py-[20px] border-b border-[#F0F0F0]'>
						<p className='text-violet100 font-robotoFlex text-[15px] font-medium mdl:text-[20px] mr-[10px]'>{num}</p>
						<p className='text-titleDark text-[15px] font-robotoFlex font-medium mdl:text-[20px]'>
							{content.subtitle[index]}
						</p>
					</div>
				))}
			</div>
		</div>
	)
}

export default ItemInfo
